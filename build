#!/bin/bash

# Import configuration variables from env file

export $(grep -v '^#' env | xargs)

# ##########################################
# show a summary of the Installation choices 
# and confirm choices
# ##########################################

clear
echo -e "Configuration:\n"
echo "Desktop environment:    $XDESKTOP_ENVIRONMENT"
echo "Remote Access:          $XREMOTE_ACCESS"
echo "Kali packages:          $XKALI_PKG"
echo -e "Network:                $XNETWORK"
echo -e "Build platform:         $XBUILD_PLATFORM"
echo -e "Image name:             $DOCKERIMG"
echo -e "Conatiner name:         $CONTAINER"
echo -e "Host dir mount:         $HOSTDIR"
echo -e "Container dir mount:    $CONTAINERDIR"
echo -e "Username:               $USERNAME"
echo -e "Password                [redacted]"

printf "\nHit enter to start building the container"
read

# Remove existing container if it exists
if [ "$(docker ps -aq -f name=^${CONTAINER}$)" ]; then
    echo "Removing existing container $CONTAINER..."
    docker rm -f $CONTAINER
fi

# Remove existing image is it exists
if docker image inspect $DOCKERIMG > /dev/null 2>&1; then
    echo "Removing existing image $DOCKERIMG..."
    docker image rm $DOCKERIMG
fi


# ##########################################
# build the image
# ##########################################
# call docker build and pass on all
# the choices as build-arg to the Dockerfile
# where they will be interpreted
# ##########################################

docker image build --platform linux/$XBUILD_PLATFORM \
        -t $DOCKERIMG \
        --build-arg DESKTOP_ENVIRONMENT=$XDESKTOP_ENVIRONMENT \
        --build-arg REMOTE_ACCESS=$XREMOTE_ACCESS \
        --build-arg KALI_PACKAGE=$XKALI_PKG \
        --build-arg RDP_PORT=$XRDP_PORT \
        --build-arg VNC_PORT=$XVNC_PORT \
        --build-arg VNC_DISPLAY=$XVNC_DISPLAY \
        --build-arg SSH_PORT=$XSSH_PORT \
        --build-arg BUILD_ENV=$XBUILD_PLATFORM \
        --build-arg HOSTDIR \
        --build-arg CONTAINERDIR \
        --build-arg UNAME=$USERNAME \
        --build-arg UPASS=$PASSWORD \
        .

# ##########################################
# create the container
# ##########################################
# call docker create and pass on all
# the choices for network and ports that the
# user has made in the menu
# ##########################################

docker create   --name $CONTAINER \
                --network $XNETWORK \
                --platform linux/$XBUILD_PLATFORM \
                -p $XRDP_PORT:$XRDP_PORT \
                -p $XVNC_PORT:$XVNC_PORT \
                -p $XSSH_PORT:$XSSH_PORT \
                -t \
                -v $HOSTDIR:$CONTAINERDIR \
                $DOCKERIMG

# ##########################################
# start the container
# ##########################################

echo "Image ($DOCKERIMG) and container ($CONTAINER) build successful. $CONTAINER will now start."
docker start $CONTAINER

# Clear environment variables from env file

unset $(grep -v '^#' env | sed -E 's/(.*)=.*/\1/' | xargs)